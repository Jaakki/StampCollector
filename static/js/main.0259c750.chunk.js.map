{"version":3,"sources":["Stamp.js","StampContainerData.js","StampContainerImage.js","StampContainer.js","MainWindow.js","DataManager.js","AboutContainer.js","AddStampContainer.js","StampListContainer.js","SummaryContainer.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Stamp","name","yearPublished","isStamped","imageURL","price","country","this","Number","parseFloat","toFixed","StampContainerData","stamp","Object","assign","props","String","GetPriceString","Component","StampContainerImage","src","alt","StampContainer","headerClicker","setState","showFull","state","className","id","onClick","hidden","MainWindow","stampCollection","InitDataManager","stamp1","stamp2","stamp3","push","AboutContainer","AddStampContainer","StampListContainer","SummaryContainer","Header","to","App","DataManager","exact","path","render","Fragment","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0259c750.chunk.js","sourcesContent":["class Stamp{\r\n    GetPriceString()\r\n    {\r\n        return Number.parseFloat(this.price).toFixed(2);\r\n    }\r\n\r\n    constructor(name, yearPublished, isStamped, imageURL, price, country){\r\n        this.name = name;\r\n        this.yearPublished = yearPublished;\r\n        this.isStamped = isStamped;\r\n        this.imageURL = imageURL;\r\n        this.price = price;\r\n        this.country = country;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {Stamp}","import React, { Component } from 'react'\r\nimport { Stamp} from './Stamp'\r\n\r\n\r\n\r\nexport class StampContainerData extends Component {\r\n    render() {\r\n        var stamp = new Stamp();\r\n        Object.assign(stamp, this.props.stamp)\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <div>{this.props.name}</div>\r\n                    <div>{stamp.yearPublished}</div>\r\n                    <div>{String(stamp.isStamped)}</div>\r\n                    <div>{stamp.GetPriceString()}</div>\r\n                    <div>{stamp.country}</div>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StampContainerData\r\n","import React, { Component } from 'react'\r\n\r\nexport class StampContainerImage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.props.imageURL} alt=\"\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StampContainerImage\r\n","import React, { Component } from 'react'\r\nimport StampContainerData from './StampContainerData'\r\nimport StampContainerImage from './StampContainerImage'\r\n\r\nexport class StampContainer extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {showFull: true};\r\n    }\r\n\r\n    headerClicker = () => {\r\n        this.setState({showFull: !this.state.showFull})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" id=\"cont\">\r\n                    <div className=\"StampContainerHeader col-md-4\" onClick={this.headerClicker}>\r\n                        {this.props.stamp.name}\r\n                    </div>\r\n                    <div className=\"row\" hidden={this.state.showFull}>\r\n                        <div className=\"col-md-5\">\r\n                            <StampContainerImage imageURL={this.props.stamp.imageURL}/>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        <StampContainerData stamp={this.props.stamp}/>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StampContainer\r\n","import React, { Component } from 'react'\r\nimport './MainWindow.css'\r\nimport StampContainer from './StampContainer'\r\n\r\nexport class MainWindow extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"Stamps\">\r\n                    <StampContainer stamp={this.props.stampCollection[0]}/>\r\n                </div>\r\n                <div className=\"Stamps\">\r\n                    <StampContainer stamp={this.props.stampCollection[1]}/>\r\n                </div>\r\n                <div className=\"Stamps\">\r\n                    <StampContainer stamp={this.props.stampCollection[2]}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainWindow\r\n","import {Stamp} from './Stamp'\r\n\r\n\r\n\r\nexport var stampCollection = []\r\n\r\nexport function InitDataManager(){\r\n    var stamp1 = new Stamp(\"Deutsches Reich\", 1942, true, \"https://images-na.ssl-images-amazon.com/images/I/518jHHkOZuL._AC_.jpg\", 0.10, \"Nazi Germany\")\r\n    var stamp2 = new Stamp(\"J.W.Stalin\", 1953, false, \"https://www.themost10.com/wp-content/uploads/Stamp-Josef-Stalin.jpg\", 0.20, \"USSR\")\r\n    var stamp3 = new Stamp(\"Mannerheim\", 1941, false, \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Mannerheim-50p-1941.jpg/240px-Mannerheim-50p-1941.jpg\", 0.50, \"Finland\")\r\n    stampCollection.push(stamp1, stamp2, stamp3)\r\n}\r\n\r\n\r\nexport default {InitDataManager, stampCollection}\r\n","import React, { Component } from 'react'\r\n\r\nexport class AboutContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                About Container testi dataa\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutContainer\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddStampContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Add Stamp Container testi data pökäle\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStampContainer","import React, { Component } from 'react'\r\n\r\nexport class StampListContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Stamp List Container data pläjäys\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StampListContainer","import React, { Component } from 'react'\r\n\r\nexport class SummaryContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Jaakko on baras :D\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SummaryContainer\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './MainWindow.css';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Stamp Collector</h1>\r\n                <div className=\"\">\r\n                    <Link className=\"RouterLink\" to=\"/\">Home</Link> | <Link className=\"RouterLink\" to=\"/About\">About</Link> | <Link className=\"RouterLink\" to=\"/AddStamp\">Add Stamp</Link> | <Link className=\"RouterLink\" to=\"/List\">List</Link> | <Link className=\"RouterLink\" to=\"/Summary\">Summary</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {MainWindow} from './MainWindow';\nimport DataManager from './DataManager';\nimport AboutContainer from './AboutContainer';\nimport AddStampContainer from './AddStampContainer';\nimport StampListContainer from './StampListContainer';\nimport SummaryContainer from './SummaryContainer';\nimport './MainWindow.css';\nimport Header from './Header';\n\nfunction App() {\n  DataManager.InitDataManager()\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container ContainerStyling\">\n          <div className=\"Header\">\n            <Header/>\n          </div>\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <MainWindow stampCollection={DataManager.stampCollection}>\n                </MainWindow>\n              </React.Fragment>)}/>\n              <Route path=\"/About\" component={AboutContainer}/>\n              <Route path=\"/AddStamp\" component={AddStampContainer}/>\n              <Route path=\"/List\" component={StampListContainer}/>\n              <Route path=\"/Summary\" component={SummaryContainer}/>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}